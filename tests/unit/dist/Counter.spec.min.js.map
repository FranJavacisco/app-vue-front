{"version":3,"sources":["Counter.spec.js"],"names":["_testUtils","require","_vuex","_interopRequireDefault","_Counter","localVue","createLocalVue","use","Vuex","describe","store","state","counter","mutations","jest","fn","decrement","Store","increment","shallowMount","Counter","expect","wrapper","text","toContain","find","trigger","toHaveBeenCalled"],"mappings":"aAAA,IAAAA,WAAAC,QAAA,mBACAC,MAAAC,uBAAAF,QAAA,SADAG,SAAAD,uBAAAF,QAAA,qGACA,IAAAI,UAAA,EAAAL,WAAAM,kBAIAD,SAASE,IAAIC,MAAAA,SAEbC,SAAS,cAAe,WACpB,IAAIC,EACAC,EALFN,EAGNI,WAAS,WACDC,EAAJ,CAAAE,QAAA,GACID,EAAJ,CACIE,UAAJC,KAAAC,KAEUC,UAACF,KAAMC,MACHH,EAAS,IAAAJ,MAAAA,QAAAS,MAAA,CAAAN,MAAAA,EAAAE,UAAAA,MAEfK,GAAAA,2BADQ,WAERF,IAAAA,GAAW,EAAAhB,WAAAmB,cAAAC,SAAAA,QAAA,CAAAV,MAAAA,EAAAL,SAAAA,WAFfgB,OAAAC,EAAAC,QAAAC,UAAA,OAIgCX,GAAAA,yBAAAA,YAAhC,EAAAb,WAAAmB,cAAAC,SAAAA,QAAA,CAAAV,MAAAA,EAAAL,SAAAA,WANJoB,KAAA,UAAAC,QAAA,SASGL,OAAAR,EAAAK,WAA4BS,qBACoBtB,GAAAA,yBAAAA,YAA/C,EAAAL,WAAAmB,cAAAC,SAAAA,QAAA,CAAAV,MAAAA,EAAAL,SAAAA,WACOiB,QAAA,UAAgBE,GAAU,GAAjCE,QAAA,SAFJL,OAAAR,EAAAG,WAAAW","file":"Counter.spec.min.js","sourcesContent":["import { shallowMount, createLocalVue } from '@vue/test-utils';\r\nimport Vuex from 'vuex';\r\nimport Counter from '@/components/Counter.vue';\r\n\r\nconst localVue = createLocalVue();\r\nlocalVue.use(Vuex);\r\n\r\ndescribe('Counter.vue', () => {\r\n    let store;\r\n    let state;\r\n    let mutations;\r\n\r\n    beforeEach(() => {\r\n        state = { counter: 0 };\r\n        mutations = {\r\n            increment: jest.fn(),\r\n            decrement: jest.fn()\r\n        };\r\n        store = new Vuex.Store({ state, mutations });\r\n    });\r\n\r\n    it('muestra el valor inicial', () => {\r\n        const wrapper = shallowMount(Counter, { store, localVue });\r\n        expect(wrapper.text()).toContain('0');\r\n    });\r\n\r\n    it('incrementa el contador', () => {\r\n        const wrapper = shallowMount(Counter, { store, localVue });\r\n        wrapper.find('button').trigger('click');\r\n        expect(mutations.increment).toHaveBeenCalled();\r\n    });\r\n\r\n    it('decrementa el contador', () => {\r\n        const wrapper = shallowMount(Counter, { store, localVue });\r\n        wrapper.findAll('button').at(1).trigger('click');\r\n        expect(mutations.decrement).toHaveBeenCalled();\r\n    });\r\n});\r\n"]}